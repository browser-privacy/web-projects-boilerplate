service: web-app

package:
  individually: true

plugins:
  - serverless-offline
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation

provider:
  name: aws
  stage: prod
  runtime: nodejs8.10
  region: us-east-1
  environment: ${file(env.yml):${self:provider.stage}}

custom:
  documentation:
    models:
      - name: RefreshAccessTokenRequest
        contentType: 'application/json'
        schema:
          required:
            - refreshToken
          properties:
            refreshToken:
              type: string
      - name: CreateUserRequest
        contentType: 'application/json'
        schema:
          required:
            - email
            - username
            - password
            - recaptcha
          properties:
            email:
              type: string
            username:
              type: string
            password:
              type: string
            recaptcha:
              type: string
      - name: LoginUserRequest
        contentType: 'application/json'
        schema:
          required:
            - userIdentifier
            - password
          properties:
            userIdentifier:
              type: string
            password:
              type: string

functions:
  healthCheck:
    handler: src/functions/healthCheck.main
    events:
      - http:
          documentation:
            requestModels:
              'application/json': LoginUserRequest
          path: health-check
          method: post
          cors: true
          reqValidatorName: 'myReqValidator'
  login:
    handler: src/functions/auth.login
    events:
      - http:
          documentation:
            requestModels:
              'application/json': LoginUserRequest
          path: auth/login
          method: post
          cors: true
  logout:
    handler: src/functions/auth.logout
    events:
      - http:
          path: auth/logout
          method: delete
          cors: true
  refreshAccessToken:
    handler: src/functions/auth.refreshAccessToken
    events:
      - http:
          documentation:
            requestModels:
              'application/json': RefreshAccessTokenRequest
          path: auth/refresh_access_token
          method: post
          cors: true
  createUser:
    handler: src/functions/user.create
    events:
      - http:
          documentation:
            requestModels:
              'application/json': CreateUserRequest
          path: users/create
          method: post
          cors: true

resources:
  Resources:
    xMyRequestValidator:
      Type: 'AWS::ApiGateway::RequestValidator'
      Properties:
        Name: 'my-req-validator'
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: true
        ValidateRequestParameters: false
